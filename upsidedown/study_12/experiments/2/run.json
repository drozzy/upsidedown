{
  "artifacts": [],
  "command": "main",
  "experiment": {
    "base_dir": "C:\\Users\\Andriy\\Projects\\upsidedown\\upsidedown\\study_12",
    "dependencies": [
      "gym==0.15.4",
      "numpy==1.17.4",
      "sacred==0.8.1",
      "torch==1.3.1"
    ],
    "mainfile": "experiment.py",
    "name": "experiment",
    "repositories": [
      {
        "commit": "4415622d6958ab41caf5858962b03912f7bfc841",
        "dirty": true,
        "url": "git@github.com:drozzy/upsidedown.git"
      }
    ],
    "sources": [
      [
        "experiment.py",
        "_sources\\experiment_67a995647437e8a6fcc1598357ae1089.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"C:\\Users\\Andriy\\Miniconda3\\envs\\upsidedown\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"C:\\Users\\Andriy\\Projects\\upsidedown\\upsidedown\\study_12\\experiment.py\", line 599, in main\n    train()\n",
    "  File \"C:\\Users\\Andriy\\Miniconda3\\envs\\upsidedown\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"C:\\Users\\Andriy\\Projects\\upsidedown\\upsidedown\\study_12\\experiment.py\", line 374, in train\n    model = Behavior(hidden_size=hidden_size, state_shape=env.observation_space.shape, num_actions=env.action_space.n).to(device)\n",
    "  File \"C:\\Users\\Andriy\\Miniconda3\\envs\\upsidedown\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"C:\\Users\\Andriy\\Projects\\upsidedown\\upsidedown\\study_12\\experiment.py\", line 325, in __init__\n    self.fc_attn_scores = nn.Linear(state_shape, state_shape)\n",
    "  File \"C:\\Users\\Andriy\\Miniconda3\\envs\\upsidedown\\lib\\site-packages\\torch\\nn\\modules\\linear.py\", line 72, in __init__\n    self.weight = Parameter(torch.Tensor(out_features, in_features))\n",
    "TypeError: new() received an invalid combination of arguments - got (tuple, tuple), but expected one of:\n * (torch.device device)\n * (torch.Storage storage)\n * (Tensor other)\n * (tuple of ints size, torch.device device)\n      didn't match because some of the arguments have invalid types: (\u001b[31;1mtuple\u001b[0m, \u001b[31;1mtuple\u001b[0m)\n * (object data, torch.device device)\n      didn't match because some of the arguments have invalid types: (\u001b[31;1mtuple\u001b[0m, \u001b[31;1mtuple\u001b[0m)\n\n"
  ],
  "heartbeat": "2020-01-13T05:51:34.409292",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i9-9900K CPU @ 3.60GHz",
    "gpus": {
      "driver_version": "432.00",
      "gpus": [
        {
          "model": "GeForce RTX 2070",
          "persistence_mode": false,
          "total_memory": 8192
        }
      ]
    },
    "hostname": "Whitebox",
    "os": [
      "Windows",
      "Windows-10-10.0.17763-SP0"
    ],
    "python_version": "3.7.3"
  },
  "meta": {
    "command": "main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2020-01-13T05:51:32.576512",
  "status": "FAILED",
  "stop_time": "2020-01-13T05:51:34.409292"
}